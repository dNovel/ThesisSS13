@misc{2,
 title = {RWTH Graphics: OpenMesh},
 url = {http://openmesh.org/},
 keywords = {Website},
 urldate = {04.12.2012}
}


@proceedings{4,
 year = {1998},
 title = {Proceedings of the fourteenth annual symposium on Computational geometry},
 address = {New York and NY and USA},
 publisher = {ACM},
 isbn = {0-89791-973-4},
 series = {SCG '98}
}


@article{AlexanderKolliopoulos.2005,
 author = {{Alexander Kolliopoulos}},
 year = {2005},
 title = {A Generic HalfedgeMesh Data Structure for .Net},
 urldate = {15.02.2013}
}


@misc{AmroKhasawneh.2007,
 author = {{Amro Khasawneh}},
 editor = {{Code Project (www.codeproject.com)}},
 year = {2007},
 title = {Understanding LINQ: C{\#}},
 url = {http://www.codeproject.com/Articles/19154/Understanding-LINQ-C}
}


@article{Botsch.,
 abstract = {We describe the implementation of a half-edge data structure for the
static representation and dynamic handling of arbitrary polygonal
meshes. The particular design of the data structures and classes aims
at maximum flexibility and high performance. We achieve this by
using generative programming concepts which allow the compiler to
resolve most of the special case handling decisions at compile time.
We evaluate our data structure based on prototypic implementations
of mesh processing applications such as decimation and smoothing.},
 author = {Botsch, Steinberg Bischoff Kobbelt},
 title = {OpenMesh},
 keywords = {Paper},
 urldate = {04.12.2012}
}


@article{Campagna.1998,
 abstract = {In a broad range of computer graphics applications, the representation of geometric shape is based on triangle meshes. General purpose data structures for polygonal meshes typically provide fast access to geometric objects (e.g., points) and topological entities (e.g., neighborhood relationships) but the memory requirements are rather high due to the many special configurations. In this paper, we present a new data structure which is specifically designed for triangle meshes. The data structure enables the programmer to trade memory for access time by either storing internal references explicitly, or by reconstructing them locally on demand. The trade-off can be hidden from the programmer by an object-oriented API and can automatically adapt to the available hardware resources or the complexity of the mesh (scalability).},
 author = {Campagna, Swen and Kobbelt, Leif and Seidel, Hans-Peter},
 year = {1998},
 title = {Directed edges---A scalable representation for triangle meshes},
 url = {http://dx.doi.org/10.1080/10867651.1998.10487494},
 keywords = {Paper},
 pages = {1--11},
 volume = {3},
 number = {4},
 issn = {1086-7651},
 journal = {J. Graph. Tools},
 doi = {10.1080/10867651.1998.10487494}
}


@article{DanEnglesson.2011,
 abstract = {In this lab assignment which was done in the course TNM079, Modeling and animation, the half-edge
mesh data structure was implemented, which solves the access to neighboring faces that is lacking from
an ordinary face- and vertex-list data structure. Because of the ease of getting the neighboring faces
the calculation of vertex normals was easily implemented as well as methods for calculating the total
area,volume and genus of the entire mesh were also implemented. Furthermore a naive method for
calculating the curvature estimate with Gaussian curvature was implemented and it was also improved
by dividing with the voronoi area instead. Further improvement was made by implementing the mean
curvature and smoothing was done by moving the vertices's positions according to the mean curvature
and the vertex normal. A description of how to reduce the half-edge mesh data structure to save memory
is also presented in this report and what benefits and disadvantages it will bring.},
 author = {{Dan Englesson}},
 year = {2011},
 title = {THE HALF-EDGE DATA STRUCTURE},
 urldate = {15.02.2013}
}


@book{Foley.2001,
 author = {Foley, James D.},
 year = {2001},
 title = {Computer graphics: Principles and practice},
 keywords = {Computergraphik},
 address = {Reading and Mass. [u.a.]},
 edition = {2},
 publisher = {Addison-Wesley},
 isbn = {0-201-84840-6}
}


@book{Gamma.2004,
 author = {Gamma, Erich},
 year = {2004},
 title = {Entwurfsmuster: Elemente wiederverwendbarer objektorientierter Software},
 keywords = {Entwurfsmuster},
 address = {M{\"u}nchen [u.a.]},
 publisher = {Addison-Wesley},
 isbn = {3-8273-2199-9}
}


@inproceedings{Kettner.1998,
 author = {Kettner, Lutz},
 title = {Designing a data structure for polyhedral surfaces},
 url = {http://doi.acm.org/10.1145/276884.276901},
 keywords = {Paper},
 pages = {146--154},
 publisher = {ACM},
 isbn = {0-89791-973-4},
 series = {SCG '98},
 booktitle = {Proceedings of the fourteenth annual symposium on Computational geometry},
 year = {1998},
 address = {New York and NY and USA},
 doi = {10.1145/276884.276901}
}


@misc{KirtanPatel.2009,
 author = {{Kirtan Patel}},
 editor = {C{\#}Corner},
 year = {2009},
 title = {Measure Execution Time of Code in C{\#}},
 url = {http://www.c-sharpcorner.com/uploadfile/kirtan007/measure-execution-time-of-code-in-C-Sharp/},
 urldate = {18.01.2013}
}


@book{Lengyel.2004,
 author = {Lengyel, Eric},
 year = {2004},
 title = {Mathematics for 3D game programming and computer graphics},
 keywords = {Computerspiel;PROGRAMMIERUNG*;Computergraphik},
 address = {Boston and Mass},
 publisher = {Charles River Media},
 isbn = {1-58450-277-0}
}


@book{Marguerie.2008,
 author = {Marguerie, Fabrice and Eichert, Steve and Wooley, Jim},
 year = {2008},
 title = {LINQ in action},
 url = {http://swbplus.bsz-bw.de/bsz278367194cov.htm},
 keywords = {Microsoft LINQ;C{\#} (Computer program language)},
 address = {Greenwich and Conn},
 edition = {1},
 publisher = {Manning},
 isbn = {978-1-933988-16-0}
}


@misc{MicrosoftCReferenz.2013,
 author = {{Microsoft C{\#}-Referenz}},
 year = {2013},
 title = {http://msdn.microsoft.com},
 url = {http://msdn.microsoft.com/de-de/library},
 urldate = {15.07.2013}
}


@book{Moller.2008,
 abstract = {Focuses on modern techniques used to generate synthetic three-dimensional images in a fraction of a second. This book discusses practical rendering methods used in games and other applications. It also presents a theoretical framework and relevant mathematics for the field of interactive computer graphics.},
 author = {M{\"o}ller, Tomas and Haines, Eric and Hoffman, Naty},
 year = {2008},
 title = {Real-time rendering},
 url = {http://www.gbv.de/dms/weimar/toc/562883495_toc.pdf},
 keywords = {Doom 3, idSoftware, Realtime, Renderer, Rendering, Echtzeit},
 address = {Wellesley and Mass},
 edition = {3},
 publisher = {A.K. Peters},
 isbn = {978-1-56881-424-7}
}


@book{vanMarkdeBerg.2008,
 author = {de Berg, Mark and Cheong, Otfried and van Kreveld, Marc and Overmars, Mark},
 year = {2008},
 title = {Computational Geometry: Algorithms and Applications: Third Edition},
 keywords = {geometrie, geometry, algorithmus, algorithm},
 address = {Berlin Heidelberg},
 urldate = {17.07.2013},
 edition = {3},
 volume = {2008},
 publisher = {Springer-Verlag},
 isbn = {978-3-540-77973-5}
}


